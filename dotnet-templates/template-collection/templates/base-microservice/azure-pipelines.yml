
trigger:
  branches:
    include:
    - master

variables:
  - group: 'core-build'

stages:
  - stage: BuildApplication
    jobs:

        ##################
        # BUILD SOLUTION #
        ##################

      - job: BuildApplication
        pool:
          vmImage: 'ubuntu-latest'
        variables:
        - name: system_accesstoken
          value: $(System.AccessToken)

        steps:
        - checkout: self
          submodules: true
          persistCredentials: true
           
        # !!! INSERT BUILD AND TEST TASKS FOR YOUR APPLICATION HERE !!!


        - task: HelmInstaller@1
          inputs:
            helmVersionToInstall: 'latest'


        ########################
        # APPLICATION SECURITY #
        ########################

      - job: Application_Security_Validation
        timeoutInMinutes: 60
        pool:
          vmImage: 'ubuntu-latest'

        variables:
        - name: buildConfiguration
          value: 'Release'
        dependsOn: 
        - BuildApplication
        
        steps:
        
        #TODO
        # !!! ADD APPLICATION SECURITY VALIDATION TASKS HERE !!!

        #####################
        # BUILD LINUX IMAGE #
        #####################

      - job: BuildDockerImage_Linux
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          packageVersion: $[ dependencies.BuildApplication.outputs['SetPackageVersionVar.PackageVersion'] ]
        dependsOn: 
        - BuildApplication
        - Application_Security_Validation

        steps:
        #TODO

  ##############
  # DEPLOYMENT #
  ##############  
  - stage: Deploy_Dev
    dependsOn: 
      - BuildApplication
    variables:
    
    jobs:
    - deployment: Deploy_Dev_AKS
      pool:
        vmImage: 'ubuntu-latest'
      environment: $(ADOEnvironmentDev).common-microservice-base
      strategy:
        runOnce:
          deploy:
            steps:
            
            - checkout: self
           
            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'latest'

  - stage: Deploy_Staging
    dependsOn: 
      - BuildApplication
      - Deploy_Dev
    variables:

    jobs:
    - deployment: Deploy_Staging_AKS
      pool:
        vmImage: 'ubuntu-latest'
      environment: $(ADOEnvironmentProd).common-microservice-base
      strategy:
        runOnce:
          deploy:
            steps:

            - checkout: self

            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'latest'


  - stage: Deploy_Production
    dependsOn: 
      - BuildApplication
      - Deploy_Dev
      - Deploy_Staging
    variables:

    jobs:
    - deployment: Deploy_Prod_AKS
      pool:
        vmImage: 'ubuntu-latest'
      environment: $(ADOEnvironmentProd).common-microservice-base
      strategy:
        runOnce:
          deploy:
            steps:

            - checkout: self


            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'latest'


