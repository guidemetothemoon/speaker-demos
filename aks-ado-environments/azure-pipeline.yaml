trigger:
  branches:
    include:
    - master

variables:
- group: ado-environments

stages:
- stage: Build
  jobs:
  
    ##################
    # BUILD SOLUTION #
    ##################
  - job: BuildAndPackage
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.x'
        includePreviewVersions: true
        
    - task: gitversion/setup@0
      displayName: 'Install GitVersion'
      inputs:
        versionSpec: '5.x'

    - task: gitversion/execute@0
      displayName: 'Calculate version'
      inputs:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'

    - script: |
        echo "##vso[task.setvariable variable=packageVersion;isOutput=true]$(GitVersion.SemVer)"
      name: setPackageVersion
      displayName: 'Set package version variable'


    - task: DotNetCoreCLI@2
      displayName: 'dotnet build sln'
      inputs:
        command: 'build'
        projects: 'src/CatEncyclopedia.csproj'
        configuration: 'Release'
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish web project'
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration Release --output docker/CatEncyclopedia'
        zipAfterPublish: false

    - task: Docker@2
      displayName: 'Build and publish Docker image'
      inputs:
        containerRegistry: 'dockerhub-sc'
        repository: 'guidemetothemoon/cat-encyclopedia'
        command: 'buildAndPush'
        Dockerfile: 'docker/Dockerfile'
        tags: '$(GitVersion.SemVer)'

    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: 'latest'

    - task: HelmDeploy@0
      displayName: helm package cat-encyclopedia
      inputs:
        command: package
        chartPath: helm/cat-encyclopedia
        destination: helm-output
        arguments: '--version $(GitVersion.SemVer) --app-version $(GitVersion.SemVer)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: helm'
      inputs:
        targetPath: 'helm-output'
        artifact: 'helm'

- stage: Deploy_Dev
  dependsOn:
  - Build  
  jobs:
  - deployment: Deploy_Dev_AKS
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      packageVersion: $[ stageDependencies.Build.BuildAndPackage.outputs['setPackageVersion.packageVersion'] ]
    environment: $(ADOEnvDev).cat-encyclopedia #aks-1233-dev.cat-encyclopedia
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current 
            artifact: helm
            displayName: 'Download artifacts from build'

          - checkout: self
          
          # This task can be enabled when Azure Container Registry is used instead of public container registry
          #- task: KubernetesManifest@0
          #  displayName: 'Deploy ACR secret'
          #  inputs:
          #    action: createSecret
          #    namespace: 'cat-encyclopedia'
          #    secretName: acrdevsecret
          #    dockerRegistryEndpoint: 'DevACR'

          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'

          - task: HelmDeploy@0
            displayName: 'Deploy cat-encyclopedia'
            inputs:
              command: upgrade 
              namespace: 'cat-encyclopedia'
              releaseName: 'cat-encyclopedia'
              chartType: FilePath
              chartPath: $(Pipeline.Workspace)/helm/cat-encyclopedia-$(packageVersion).tgz
              arguments: '--install --timeout 2m'
